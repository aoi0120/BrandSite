// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//ブランドテーブル
model Brand {
  id          String @id @default(uuid())
  title       String
  description String?
  photo_url   String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  likes Like[]
  tags BrandTag[]
}

//ユーザーテーブル
model User {
  id          String @id @default(uuid())
  name        String
  email       String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  likes Like[]
}

//いいねのテーブル
model Like {
  id          String @id @default(now())

  created_at DataTime @default(now())
  updated_at DataTime @updatedAt

  //外部キー
  user_id
  brand_id

  //relation
  user User @relation(fields: [user_id], references: [id])
  brand Brand @relation(fields: [user_id], references: [id])

  @unique([user_id, brand_id]) //同じユーザーが同じブランドにいいねを複数回押せないようにする
}

model Tags {
  brand_id  String
  tag_id    String

  //relation
  brand Brand @relation(fields: [brand_id], references: [id])
  tag Tag @relation(fields: [tag_id], references: [id])
}

//ブランドにタグ用
model Brand_Tag {
  brand_id  String
  tag_id    String

  //relation
  brand Brand @relation(fields: [brand_id], references: [id])
  tag Tag @relation(fields: [tag_id], references: [id])

  @unique([brand_id, tag_id]) //同じブランドに同じタグを複数回登録できないようにする
}
